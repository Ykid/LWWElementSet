// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package com.challenge.solution2.proto.lwwelementset

@SerialVersionUID(0L)
final case class LWWElementSet(
    addSet: _root_.scala.Option[com.challenge.solution2.proto.lwwelementset.TimestampGSet] = _root_.scala.None,
    removeSet: _root_.scala.Option[com.challenge.solution2.proto.lwwelementset.TimestampGSet] = _root_.scala.None
    ) extends scalapb.GeneratedMessage with scalapb.Message[LWWElementSet] with scalapb.lenses.Updatable[LWWElementSet] {
    @transient
    private[this] var __serializedSizeCachedValue: _root_.scala.Int = 0
    private[this] def __computeSerializedValue(): _root_.scala.Int = {
      var __size = 0
      if (addSet.isDefined) {
        val __value = addSet.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (removeSet.isDefined) {
        val __value = removeSet.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      __size
    }
    final override def serializedSize: _root_.scala.Int = {
      var read = __serializedSizeCachedValue
      if (read == 0) {
        read = __computeSerializedValue()
        __serializedSizeCachedValue = read
      }
      read
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      addSet.foreach { __v =>
        val __m = __v
        _output__.writeTag(1, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      removeSet.foreach { __v =>
        val __m = __v
        _output__.writeTag(2, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
    }
    def mergeFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.challenge.solution2.proto.lwwelementset.LWWElementSet = {
      var __addSet = this.addSet
      var __removeSet = this.removeSet
      var _done__ = false
      while (!_done__) {
        val _tag__ = _input__.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 10 =>
            __addSet = Option(_root_.scalapb.LiteParser.readMessage(_input__, __addSet.getOrElse(com.challenge.solution2.proto.lwwelementset.TimestampGSet.defaultInstance)))
          case 18 =>
            __removeSet = Option(_root_.scalapb.LiteParser.readMessage(_input__, __removeSet.getOrElse(com.challenge.solution2.proto.lwwelementset.TimestampGSet.defaultInstance)))
          case tag => _input__.skipField(tag)
        }
      }
      com.challenge.solution2.proto.lwwelementset.LWWElementSet(
          addSet = __addSet,
          removeSet = __removeSet
      )
    }
    def getAddSet: com.challenge.solution2.proto.lwwelementset.TimestampGSet = addSet.getOrElse(com.challenge.solution2.proto.lwwelementset.TimestampGSet.defaultInstance)
    def clearAddSet: LWWElementSet = copy(addSet = _root_.scala.None)
    def withAddSet(__v: com.challenge.solution2.proto.lwwelementset.TimestampGSet): LWWElementSet = copy(addSet = Option(__v))
    def getRemoveSet: com.challenge.solution2.proto.lwwelementset.TimestampGSet = removeSet.getOrElse(com.challenge.solution2.proto.lwwelementset.TimestampGSet.defaultInstance)
    def clearRemoveSet: LWWElementSet = copy(removeSet = _root_.scala.None)
    def withRemoveSet(__v: com.challenge.solution2.proto.lwwelementset.TimestampGSet): LWWElementSet = copy(removeSet = Option(__v))
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => addSet.orNull
        case 2 => removeSet.orNull
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => addSet.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 2 => removeSet.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion = com.challenge.solution2.proto.lwwelementset.LWWElementSet
}

object LWWElementSet extends scalapb.GeneratedMessageCompanion[com.challenge.solution2.proto.lwwelementset.LWWElementSet] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[com.challenge.solution2.proto.lwwelementset.LWWElementSet] = this
  def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[_root_.com.google.protobuf.Descriptors.FieldDescriptor, _root_.scala.Any]): com.challenge.solution2.proto.lwwelementset.LWWElementSet = {
    _root_.scala.Predef.require(__fieldsMap.keys.forall(_.getContainingType() == javaDescriptor), "FieldDescriptor does not match message type.")
    val __fields = javaDescriptor.getFields
    com.challenge.solution2.proto.lwwelementset.LWWElementSet(
      __fieldsMap.get(__fields.get(0)).asInstanceOf[_root_.scala.Option[com.challenge.solution2.proto.lwwelementset.TimestampGSet]],
      __fieldsMap.get(__fields.get(1)).asInstanceOf[_root_.scala.Option[com.challenge.solution2.proto.lwwelementset.TimestampGSet]]
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[com.challenge.solution2.proto.lwwelementset.LWWElementSet] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
      com.challenge.solution2.proto.lwwelementset.LWWElementSet(
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).flatMap(_.as[_root_.scala.Option[com.challenge.solution2.proto.lwwelementset.TimestampGSet]]),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).flatMap(_.as[_root_.scala.Option[com.challenge.solution2.proto.lwwelementset.TimestampGSet]])
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = LwwelementsetProto.javaDescriptor.getMessageTypes.get(0)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = LwwelementsetProto.scalaDescriptor.messages(0)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 1 => __out = com.challenge.solution2.proto.lwwelementset.TimestampGSet
      case 2 => __out = com.challenge.solution2.proto.lwwelementset.TimestampGSet
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = com.challenge.solution2.proto.lwwelementset.LWWElementSet(
  )
  final val ADDSET_FIELD_NUMBER = 1
  final val REMOVESET_FIELD_NUMBER = 2
  def of(
    addSet: _root_.scala.Option[com.challenge.solution2.proto.lwwelementset.TimestampGSet],
    removeSet: _root_.scala.Option[com.challenge.solution2.proto.lwwelementset.TimestampGSet]
  ): _root_.com.challenge.solution2.proto.lwwelementset.LWWElementSet = _root_.com.challenge.solution2.proto.lwwelementset.LWWElementSet(
    addSet,
    removeSet
  )
}
