// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package com.challenge.solution2.proto.lwwelementset

@SerialVersionUID(0L)
final case class TimestampGSet(
    entries: _root_.scala.Seq[com.challenge.solution2.proto.lwwelementset.TimestampGSet.Entry] = _root_.scala.Seq.empty
    ) extends scalapb.GeneratedMessage with scalapb.Message[TimestampGSet] with scalapb.lenses.Updatable[TimestampGSet] {
    @transient
    private[this] var __serializedSizeCachedValue: _root_.scala.Int = 0
    private[this] def __computeSerializedValue(): _root_.scala.Int = {
      var __size = 0
      entries.foreach { __item =>
        val __value = __item
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      }
      __size
    }
    final override def serializedSize: _root_.scala.Int = {
      var read = __serializedSizeCachedValue
      if (read == 0) {
        read = __computeSerializedValue()
        __serializedSizeCachedValue = read
      }
      read
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      entries.foreach { __v =>
        val __m = __v
        _output__.writeTag(1, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
    }
    def mergeFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.challenge.solution2.proto.lwwelementset.TimestampGSet = {
      val __entries = (_root_.scala.collection.immutable.Vector.newBuilder[com.challenge.solution2.proto.lwwelementset.TimestampGSet.Entry] ++= this.entries)
      var _done__ = false
      while (!_done__) {
        val _tag__ = _input__.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 10 =>
            __entries += _root_.scalapb.LiteParser.readMessage(_input__, com.challenge.solution2.proto.lwwelementset.TimestampGSet.Entry.defaultInstance)
          case tag => _input__.skipField(tag)
        }
      }
      com.challenge.solution2.proto.lwwelementset.TimestampGSet(
          entries = __entries.result()
      )
    }
    def clearEntries = copy(entries = _root_.scala.Seq.empty)
    def addEntries(__vs: com.challenge.solution2.proto.lwwelementset.TimestampGSet.Entry*): TimestampGSet = addAllEntries(__vs)
    def addAllEntries(__vs: Iterable[com.challenge.solution2.proto.lwwelementset.TimestampGSet.Entry]): TimestampGSet = copy(entries = entries ++ __vs)
    def withEntries(__v: _root_.scala.Seq[com.challenge.solution2.proto.lwwelementset.TimestampGSet.Entry]): TimestampGSet = copy(entries = __v)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => entries
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PRepeated(entries.iterator.map(_.toPMessage).toVector)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion = com.challenge.solution2.proto.lwwelementset.TimestampGSet
}

object TimestampGSet extends scalapb.GeneratedMessageCompanion[com.challenge.solution2.proto.lwwelementset.TimestampGSet] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[com.challenge.solution2.proto.lwwelementset.TimestampGSet] = this
  def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[_root_.com.google.protobuf.Descriptors.FieldDescriptor, _root_.scala.Any]): com.challenge.solution2.proto.lwwelementset.TimestampGSet = {
    _root_.scala.Predef.require(__fieldsMap.keys.forall(_.getContainingType() == javaDescriptor), "FieldDescriptor does not match message type.")
    val __fields = javaDescriptor.getFields
    com.challenge.solution2.proto.lwwelementset.TimestampGSet(
      __fieldsMap.getOrElse(__fields.get(0), Nil).asInstanceOf[_root_.scala.Seq[com.challenge.solution2.proto.lwwelementset.TimestampGSet.Entry]]
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[com.challenge.solution2.proto.lwwelementset.TimestampGSet] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
      com.challenge.solution2.proto.lwwelementset.TimestampGSet(
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Seq[com.challenge.solution2.proto.lwwelementset.TimestampGSet.Entry]]).getOrElse(_root_.scala.Seq.empty)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = LwwelementsetProto.javaDescriptor.getMessageTypes.get(1)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = LwwelementsetProto.scalaDescriptor.messages(1)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 1 => __out = com.challenge.solution2.proto.lwwelementset.TimestampGSet.Entry
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] =
    Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]](
      _root_.com.challenge.solution2.proto.lwwelementset.TimestampGSet.Entry
    )
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = com.challenge.solution2.proto.lwwelementset.TimestampGSet(
  )
  @SerialVersionUID(0L)
  final case class Entry(
      element: _root_.scala.Option[com.google.protobuf.any.Any] = _root_.scala.None,
      timestamp: _root_.scala.Option[com.google.protobuf.timestamp.Timestamp] = _root_.scala.None
      ) extends scalapb.GeneratedMessage with scalapb.Message[Entry] with scalapb.lenses.Updatable[Entry] {
      @transient
      private[this] var __serializedSizeCachedValue: _root_.scala.Int = 0
      private[this] def __computeSerializedValue(): _root_.scala.Int = {
        var __size = 0
        if (element.isDefined) {
          val __value = element.get
          __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
        };
        if (timestamp.isDefined) {
          val __value = timestamp.get
          __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
        };
        __size
      }
      final override def serializedSize: _root_.scala.Int = {
        var read = __serializedSizeCachedValue
        if (read == 0) {
          read = __computeSerializedValue()
          __serializedSizeCachedValue = read
        }
        read
      }
      def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
        element.foreach { __v =>
          val __m = __v
          _output__.writeTag(1, 2)
          _output__.writeUInt32NoTag(__m.serializedSize)
          __m.writeTo(_output__)
        };
        timestamp.foreach { __v =>
          val __m = __v
          _output__.writeTag(2, 2)
          _output__.writeUInt32NoTag(__m.serializedSize)
          __m.writeTo(_output__)
        };
      }
      def mergeFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.challenge.solution2.proto.lwwelementset.TimestampGSet.Entry = {
        var __element = this.element
        var __timestamp = this.timestamp
        var _done__ = false
        while (!_done__) {
          val _tag__ = _input__.readTag()
          _tag__ match {
            case 0 => _done__ = true
            case 10 =>
              __element = Option(_root_.scalapb.LiteParser.readMessage(_input__, __element.getOrElse(com.google.protobuf.any.Any.defaultInstance)))
            case 18 =>
              __timestamp = Option(_root_.scalapb.LiteParser.readMessage(_input__, __timestamp.getOrElse(com.google.protobuf.timestamp.Timestamp.defaultInstance)))
            case tag => _input__.skipField(tag)
          }
        }
        com.challenge.solution2.proto.lwwelementset.TimestampGSet.Entry(
            element = __element,
            timestamp = __timestamp
        )
      }
      def getElement: com.google.protobuf.any.Any = element.getOrElse(com.google.protobuf.any.Any.defaultInstance)
      def clearElement: Entry = copy(element = _root_.scala.None)
      def withElement(__v: com.google.protobuf.any.Any): Entry = copy(element = Option(__v))
      def getTimestamp: com.google.protobuf.timestamp.Timestamp = timestamp.getOrElse(com.google.protobuf.timestamp.Timestamp.defaultInstance)
      def clearTimestamp: Entry = copy(timestamp = _root_.scala.None)
      def withTimestamp(__v: com.google.protobuf.timestamp.Timestamp): Entry = copy(timestamp = Option(__v))
      def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
        (__fieldNumber: @_root_.scala.unchecked) match {
          case 1 => element.orNull
          case 2 => timestamp.orNull
        }
      }
      def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
        _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
        (__field.number: @_root_.scala.unchecked) match {
          case 1 => element.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
          case 2 => timestamp.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        }
      }
      def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
      def companion = com.challenge.solution2.proto.lwwelementset.TimestampGSet.Entry
  }
  
  object Entry extends scalapb.GeneratedMessageCompanion[com.challenge.solution2.proto.lwwelementset.TimestampGSet.Entry] {
    implicit def messageCompanion: scalapb.GeneratedMessageCompanion[com.challenge.solution2.proto.lwwelementset.TimestampGSet.Entry] = this
    def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[_root_.com.google.protobuf.Descriptors.FieldDescriptor, _root_.scala.Any]): com.challenge.solution2.proto.lwwelementset.TimestampGSet.Entry = {
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.getContainingType() == javaDescriptor), "FieldDescriptor does not match message type.")
      val __fields = javaDescriptor.getFields
      com.challenge.solution2.proto.lwwelementset.TimestampGSet.Entry(
        __fieldsMap.get(__fields.get(0)).asInstanceOf[_root_.scala.Option[com.google.protobuf.any.Any]],
        __fieldsMap.get(__fields.get(1)).asInstanceOf[_root_.scala.Option[com.google.protobuf.timestamp.Timestamp]]
      )
    }
    implicit def messageReads: _root_.scalapb.descriptors.Reads[com.challenge.solution2.proto.lwwelementset.TimestampGSet.Entry] = _root_.scalapb.descriptors.Reads{
      case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
        _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
        com.challenge.solution2.proto.lwwelementset.TimestampGSet.Entry(
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).flatMap(_.as[_root_.scala.Option[com.google.protobuf.any.Any]]),
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).flatMap(_.as[_root_.scala.Option[com.google.protobuf.timestamp.Timestamp]])
        )
      case _ => throw new RuntimeException("Expected PMessage")
    }
    def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = com.challenge.solution2.proto.lwwelementset.TimestampGSet.javaDescriptor.getNestedTypes.get(0)
    def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = com.challenge.solution2.proto.lwwelementset.TimestampGSet.scalaDescriptor.nestedMessages(0)
    def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
      var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
      (__number: @_root_.scala.unchecked) match {
        case 1 => __out = com.google.protobuf.any.Any
        case 2 => __out = com.google.protobuf.timestamp.Timestamp
      }
      __out
    }
    lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
    def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
    lazy val defaultInstance = com.challenge.solution2.proto.lwwelementset.TimestampGSet.Entry(
    )
    final val ELEMENT_FIELD_NUMBER = 1
    final val TIMESTAMP_FIELD_NUMBER = 2
    def of(
      element: _root_.scala.Option[com.google.protobuf.any.Any],
      timestamp: _root_.scala.Option[com.google.protobuf.timestamp.Timestamp]
    ): _root_.com.challenge.solution2.proto.lwwelementset.TimestampGSet.Entry = _root_.com.challenge.solution2.proto.lwwelementset.TimestampGSet.Entry(
      element,
      timestamp
    )
  }
  
  final val ENTRIES_FIELD_NUMBER = 1
  def of(
    entries: _root_.scala.Seq[com.challenge.solution2.proto.lwwelementset.TimestampGSet.Entry]
  ): _root_.com.challenge.solution2.proto.lwwelementset.TimestampGSet = _root_.com.challenge.solution2.proto.lwwelementset.TimestampGSet(
    entries
  )
}
